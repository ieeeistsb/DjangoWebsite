# Generated by Django 3.0 on 2019-12-13 03:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CommunityModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('info_en', models.TextField()),
                ('info_pt', models.TextField()),
                ('image', models.ImageField(blank=True, upload_to='')),
                ('newsletter_subscribe_url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PartnerModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, null=True)),
                ('name', models.CharField(max_length=128)),
                ('image', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='SocialNetworkModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('facebook', 'Facebook'), ('instagram', 'Instagram'), ('linkedin', 'Linkedin'), ('twitter', 'Twitter')], max_length=100)),
                ('url', models.CharField(max_length=400)),
            ],
        ),
        migrations.CreateModel(
            name='TagModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='TeamModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin_year', models.IntegerField()),
                ('end_year', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='VolunteerModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('image', models.ImageField(upload_to='')),
                ('socials', models.ManyToManyField(blank=True, to='app.SocialNetworkModel')),
            ],
        ),
        migrations.CreateModel(
            name='TeamMemberModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=50)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.VolunteerModel')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.TeamModel')),
            ],
        ),
        migrations.CreateModel(
            name='NewsModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('tags', models.ManyToManyField(blank=True, to='app.TagModel')),
            ],
        ),
        migrations.CreateModel(
            name='NewsletterModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_en', models.CharField(max_length=100)),
                ('title_pt', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('publish_date', models.DateTimeField()),
                ('pdf', models.FileField(upload_to='')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.CommunityModel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InitiativeModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_en', models.CharField(max_length=100)),
                ('title_pt', models.CharField(max_length=100)),
                ('content_en', models.TextField()),
                ('content_pt', models.TextField()),
                ('community', models.URLField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('partners', models.ManyToManyField(blank=True, to='app.PartnerModel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InitiativeEventModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_en', models.CharField(max_length=100)),
                ('title_pt', models.CharField(max_length=100)),
                ('content_en', models.TextField()),
                ('content_pt', models.TextField()),
                ('image', models.ImageField(upload_to='')),
                ('date', models.DateTimeField()),
                ('facebook', models.URLField(blank=True, null=True)),
                ('initiative', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.InitiativeModel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='communitymodel',
            name='chair',
            field=models.ManyToManyField(blank=True, related_name='chair', to='app.VolunteerModel'),
        ),
        migrations.AddField(
            model_name='communitymodel',
            name='vice_chair',
            field=models.ManyToManyField(related_name='vice_chair', to='app.VolunteerModel'),
        ),
    ]
